---
// Este componente simula el login, en una app real conectarías con tu sistema de auth
---

<div class="login-container">
    <button class="login-btn" id="login-btn">
        <span class="login-text">Iniciar Sesión</span>
        <svg class="login-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor">
            <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path>
            <circle cx="12" cy="7" r="4"></circle>
        </svg>
    </button>

    <div class="user-menu hidden" id="user-menu">
        <div class="user-avatar">
            <img src="/pictures/default-avatar.jpg" alt="Usuario" class="avatar-img">
        </div>
        <div class="user-dropdown">
            <a href="/perfil" class="dropdown-item">Ver Perfil</a>
            <a href="/reservas" class="dropdown-item">Mis Reservas</a>
            <button class="dropdown-item logout-btn" id="logout-btn">Cerrar Sesión</button>
        </div>
    </div>
</div>

<style>
    .login-container {
        position: relative;
    }

    .login-btn {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        background: linear-gradient(45deg, #667eea 0%, #764ba2 100%);
        color: white;
        border: none;
        padding: 0.75rem 1.5rem;
        border-radius: 50px;
        cursor: pointer;
        font-weight: 600;
        transition: all 0.3s ease;
        box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);
    }

    .login-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 6px 20px rgba(102, 126, 234, 0.6);
    }

    .login-icon {
        width: 18px;
        height: 18px;
    }

    .user-menu {
        position: absolute;
        top: 100%;
        right: 0;
        margin-top: 0.5rem;
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: 12px;
        padding: 1rem;
        min-width: 200px;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
    }

    .user-menu.hidden {
        display: none;
    }

    .user-avatar {
        display: flex;
        justify-content: center;
        margin-bottom: 1rem;
    }

    .avatar-img {
        width: 60px;
        height: 60px;
        border-radius: 50%;
        object-fit: cover;
        border: 3px solid rgba(255, 255, 255, 0.3);
    }

    .user-dropdown {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
    }

    .dropdown-item {
        color: white;
        text-decoration: none;
        padding: 0.5rem 1rem;
        border-radius: 8px;
        transition: all 0.3s ease;
        background: none;
        border: none;
        cursor: pointer;
        text-align: left;
        font-size: 0.9rem;
    }

    .dropdown-item:hover {
        background: rgba(255, 255, 255, 0.1);
        transform: translateX(4px);
    }

    @media (max-width: 768px) {
        .login-btn {
            padding: 0.5rem 1rem;
            font-size: 0.9rem;
        }

        .login-text {
            display: none;
        }

        .user-menu {
            right: -50px;
            min-width: 150px;
        }
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const loginBtn = document.getElementById('login-btn');
        const userMenu = document.getElementById('user-menu');
        const logoutBtn = document.getElementById('logout-btn');
        let isLoggedIn = false;

        loginBtn?.addEventListener('click', () => {
            if (!isLoggedIn) {
                // Simular login
                isLoggedIn = true;
                loginBtn.style.display = 'none';
                userMenu?.classList.remove('hidden');
            }
        });

        logoutBtn?.addEventListener('click', () => {
            isLoggedIn = false;
            userMenu?.classList.add('hidden');
            if (loginBtn) loginBtn.style.display = 'flex';
        });

        // Cerrar menú al hacer click fuera
        document.addEventListener('click', (e) => {
            if (!userMenu?.contains(e.target as Node) && !loginBtn?.contains(e.target as Node)) {
                // userMenu?.classList.add('hidden');
            }
        });
    });
</script>
